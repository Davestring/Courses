$color-primary: #55C57A;
$color-primary-dark: #28B485;
$color-primary-light: #7ED56F;

$color-grey-dark: #777;
$color-white: #FFF;

/* reset the default browser styles with the universal selector */
*,
*::after,
*::before {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
}

html {
    font-size: 62.5%;
}

/* default font properties always are set in the body tag */
body {
    box-sizing: border-box;
    color: $color-white;
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    padding: 3rem;
}

.header {
    /* set two background images: a gradient and a jpg file */
    background-image: 
        linear-gradient(
            to right bottom,
            rgba($color-primary, 0.8),
            rgba($color-primary-dark, 0.8)
        ),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    /* specifies a polygon in which the element will be available, the coordinates are clockwise */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
    position: relative;
}

.header__logo {
    height: 3.5rem;
}

.header__logo-box {
    position: absolute;
    left: 4rem;
    top: 4rem;  
}

.header__text-box {
    left: 50%;
    position: absolute;
    text-align: center;
    top: 40%;
    /* centers the div horizontally and vertically */
    transform: translate(-50%, -50%);
}

.heading-primary {
    /* if the animation moves, this avoids this behavior */
    backface-visibility: hidden;
    color: $color-white;
    text-transform: uppercase;
    margin-bottom: 6rem;
}

.heading-primary--main {
    /* add an animation to the css class */
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* display block uses the entire width and sets an line break at the end */
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
}

.heading-primary--sub {
    /* animation shortcut */
    animation: moveInRight 2s ease-out;
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
}

/* pseudo-classes allows to style an element under specific conditions */
.btn:link, .btn:visited {
    border-radius: 10rem;
    /* 
     * by default anchor tag is inline but inline-block allows to treat the element as it
     * was a normal block without using the entire width as a block element does and with this,
     * we can add margin and padding as a normal block
     */
    display: inline-block;
    font-size: 1.6rem;
    padding: 1.5rem 4rem;
    position: relative;
    text-decoration: none;
    text-transform: uppercase;
    transition: all .2s;
}

.btn:hover {
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
    transform: translateY(-.3rem);
}

/* animation when the button is pressed */
.btn:active {
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
    transform: translateY(-.1rem);
}

/* pseudo-elements allows to style certain parts of css elements */
.btn::after {
    border-radius: 10rem;
    content: "";
    display: inline-block;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    transition: all .4s;
    width: 100%;
    /* this pseudo-element starts behaind of the original element */
    z-index: -1;
}

/* then when the button is hover, the pseudo-element jumps in front the original element */
.btn:hover::after {
    opacity: 0;
    transform: scale(1.5);
}

.btn--white {
    background-color: $color-white;
    color: $color-grey-dark;
}

.btn--white::after {
    background-color: $color-white;
    color: $color-grey-dark;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    /* 
     * apply the animation at 0% before the animations starts, very useful if we
     * have animation with delay
     */
    animation-fill-mode: backwards;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        opacity: 0.8;
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        opacity: 0.8;
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}